version: '3'

services:

  node-red:
    build: ./NodeRed
    container_name: Node-Red
    restart: unless-stopped
    depends_on:
      - broker
    ports:
      - 1880:1880
    environment:
      TZ: ${TIMEZONE}
      NODE_RED_USERNAME: ${NODE_RED_USERNAME}
      NODE_RED_PASSWORD: ${NODE_RED_PASSWORD}
      TIMESCALE_DATABASE_NAME: ${TIMESCALE_DATABASE_NAME}
      TIMESCALE_USERNAME: ${TIMESCALE_USERNAME}
      TIMESCALE_PASSWORD: ${TIMESCALE_PASSWORD}
    volumes:
      - node-red_data:/data
    networks:
      - nh_network
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1880/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  broker:
    image: hivemq/hivemq-edge
    container_name: Node-Broker
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "8080:8080"
    volumes:
      - broker_data:/opt/hivemq/data
      - broker_logs:/opt/hivemq/log
    networks:
      - nh_network
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  historian:
    image: timescale/timescaledb:latest-pg12
    container_name: Node-Historian
    restart: unless-stopped
    ports:
      - 5434:5432
    networks:
      - nh_network
    environment:
      - POSTGRES_DB=${TIMESCALE_DATABASE_NAME}
      - POSTGRES_USER=${TIMESCALE_USERNAME}
      - POSTGRES_PASSWORD=${TIMESCALE_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TIMESCALE_USERNAME} -d ${TIMESCALE_DATABASE_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  nh_network:
    driver: bridge

volumes:
  node-red_data:
  broker_data:
  broker_logs:
  db_data:
