
x-logging: &default-logging
  driver: json-file
  options:
    max-size: "5m"
    max-file: "2"

services:
  
  node-red-historian:
    build: ./NodeRed/Historian
    container_name: Node-Red-Historian
    restart: unless-stopped
    depends_on:
      - broker
    ports:
      - 1890:1880
    environment:
      TZ: ${TIMEZONE:-America/Chicago}
      NODE_RED_USERNAME: ${NODE_RED_USERNAME:-admin}
      NODE_RED_PASSWORD: ${NODE_RED_PASSWORD:-password}
      TIMESCALE_DATABASE_NAME: ${TIMESCALE_DATABASE_NAME:-NodeHistorian}
      TIMESCALE_USERNAME: ${TIMESCALE_USERNAME:-admin}
      TIMESCALE_PASSWORD: ${TIMESCALE_PASSWORD:-password}
    volumes:
      - node_red_historian_data:/data
    networks:
      - nh_network
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1890/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  node-red-router:
    build: ./NodeRed/Router
    container_name: Node-Red-Router
    restart: unless-stopped
    depends_on:
      - broker
    ports:
      - 1891:1880
    environment:
      TZ: ${TIMEZONE:-America/Chicago}
      NODE_RED_USERNAME: ${NODE_RED_USERNAME:-admin}
      NODE_RED_PASSWORD: ${NODE_RED_PASSWORD:-password}
      TIMESCALE_DATABASE_NAME: ${TIMESCALE_DATABASE_NAME:-NodeHistorian}
      TIMESCALE_USERNAME: ${TIMESCALE_USERNAME:-admin}
      TIMESCALE_PASSWORD: ${TIMESCALE_PASSWORD:-password}
    volumes:
      - node_red_router_data:/data
    networks:
      - nh_network
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1891/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  node-red-gateway:
    build: ./NodeRed/Gateway
    container_name: Node-Red-Gateway
    restart: unless-stopped
    depends_on:
      - broker
    ports:
      - 1892:1880
    environment:
      TZ: ${TIMEZONE:-America/Chicago}
      NODE_RED_USERNAME: ${NODE_RED_USERNAME:-admin}
      NODE_RED_PASSWORD: ${NODE_RED_PASSWORD:-password}
    volumes:
      - node_red_gateway_data:/data
    networks:
      - nh_network
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1892/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  node-red-frontend:
    build: ./NodeRed/Frontend
    container_name: Node-Red-Frontend
    restart: unless-stopped
    depends_on:
      - broker
    ports:
      - 1893:1880
    environment:
      TZ: ${TIMEZONE:-America/Chicago}
      NODE_RED_USERNAME: ${NODE_RED_USERNAME:-admin}
      NODE_RED_PASSWORD: ${NODE_RED_PASSWORD:-password}
    volumes:
      - node_red_frontend_data:/data
    networks:
      - nh_network
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1893/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  broker:
    image: hivemq/hivemq-edge
    container_name: Node-Broker
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "8080:8080"
    volumes:
      - broker_data:/opt/hivemq/data
      - broker_logs:/opt/hivemq/log
    networks:
      - nh_network
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  historian:
    image: timescale/timescaledb:latest-pg16
    container_name: Node-Historian
    restart: unless-stopped
    ports:
      - 5432:5432
    networks:
      - nh_network
    environment:
      - POSTGRES_DB=${TIMESCALE_DATABASE_NAME:-NodeHistorian}
      - POSTGRES_USER=${TIMESCALE_USERNAME:-admin}
      - POSTGRES_PASSWORD=${TIMESCALE_PASSWORD:-password}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TIMESCALE_USERNAME:-admin} -d ${TIMESCALE_DATABASE_NAME:-NodeHistorian}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  nh_network:
    driver: bridge

volumes:
  node-red_data:
  node_red_historian_data:
  node_red_router_data:
  node_red_gateway_data:
  node_red_frontend_data:
  broker_data:
  broker_logs:
  db_data:
